# Load z if it's available
if [ -f ~/Programs/z.sh ]; then
    . ~/Programs/z.sh
fi

# Initialize Starship prompt
# Uncomment the following line if you want to initialize Starship
# eval "$(starship init zsh)"
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word

export NIX_CONF_PATH="$HOME/hector-config"
export SHELLS_PATH="$NIX_CONF_PATH/shells"
export SCRIPTS_PATH="$NIX_CONF_PATH/system/scripts"

# Define the function to run nix-shell with any input
_enter_nix_shell() {
    if [ -n "$1" ]; then
        nix-shell "$SHELLS_PATH/$1.nix" --run zsh
    else
        echo "Usage: shell <shell_name>"
    fi
}

_run_nix_shell(){
    if [ -n "$1" ]; then
        nix-shell "$SHELLS_PATH/$1.nix" --run "$2"
    else
        echo "Usage: shellrun <shell_name> <command>"
    fi
}

_venv() {
    if [ "$1" = "create" ]; then
        if [ -z "$3" ]; then
            echo "Error: Please provide a Python version when creating a venv."
            echo "Usage: venv create <venv_name> <python_version>"
            return 1
        fi
        nix-shell "$SHELLS_PATH/$3.nix" --run "python3 -m venv /home/hector/venvs/$2"
    elif [ "$1" = "activate" ]; then
        if [ -z "$2" ]; then
            echo "Error: Please specify a venv name to activate."
            echo "Usage: venv activate <venv_name>"
            return 1
        fi
        source "/home/hector/venvs/$2/bin/activate"
    elif [ "$1" = "deactivate" ]; then
        deactivate
    else
        echo "Usage: venv <create|activate|deactivate> <venv_name> [python_version]"
        return 1
    fi
}


alias shell='_enter_nix_shell'
alias shellrun='_run_nix_shell'
alias venv='_venv'
alias dirstats="python3 $SCRIPTS_PATH/dir_stats.py"

alias night="nohup wlsunset -t 2000 -T 3000 &>/dev/null & nohup swaybg -c '#000000' &>/dev/null &"
alias day="killall wlsunset && nohup swaybg -i '$HOME/.config/hypr/wallpaper.jpeg' &>/dev/null &"

# Example of adding more functionality using the alias
alias shell_list='ls $SHELLS_PATH'


# Aliases
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.tar.xz)    tar xJf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
